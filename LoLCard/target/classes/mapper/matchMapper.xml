<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bean.mapper.matchMapper">
	
	<insert id="matchPlayInfo" parameterType="matchPlayInfoDTO">
	INSERT	INTO matchPartyData
			(matchId, 
			championId,
			primaryCode, 
			myPlayData, 
			kills, 
			deaths, 
			assists, 
			largestKillingSpree, 
			largestMultiKill, 
			killingSprees, 
			longestTimeSpentLiving,
			doubleKills,			
			tripleKills, 
			quadraKills, 
			pentaKills, 
			totalDamageDealt, 
			magicDamageDealt,
			physicalDamageDealt,
            trueDamageDealt,
			largestCriticalStrike, 
			totalDamageDealtToChampions,
			magicDamageDealtToChampions, 
			physicalDamageDealtToChampions, 
			trueDamageDealtToChampions,
			totalHeal, 
			totalUnitsHealed, 
			damageSelfMitigated, 
			damageDealtToObjectives,
			damageDealtToTurrets, 
			visionScore, 
			timeCCingOthers, 
			totalDamageTaken, 
			magicalDamageTaken, 
			physicalDamageTaken, 
			trueDamageTaken,
			goldEarned, 
			turretKills, 
			inhibitorKills, 
			totalMinionsKilled, 
			neutralMinionsKilledEnemyJungle, 
			champLevel, 
			visionWardsBoughtInGame, 
			wardsPlaced, 
			wardsKilled, 
			firstBloodKill, 
			firstTowerKill
			)
			
	VALUES	(#{matchId}, 
			#{championId}, 
			#{primaryCode},
			#{myPlayData}, 
			#{kills}, 
			#{deaths}, 
			#{assists}, 
			#{largestKillingSpree}, 
			#{largestMultiKill}, 
			#{killingSprees}, 
			#{longestTimeSpentLiving},
			#{doubleKills},			
			#{tripleKills}, 
			#{quadraKills}, 
			#{pentaKills}, 
			#{totalDamageDealt}, 
			#{magicDamageDealt},
			#{physicalDamageDealt},
            #{trueDamageDealt},
			#{largestCriticalStrike}, 
			#{totalDamageDealtToChampions},
			#{magicDamageDealtToChampions}, 
			#{physicalDamageDealtToChampions}, 
			#{trueDamageDealtToChampions},
			#{totalHeal}, 
			#{totalUnitsHealed}, 
			#{damageSelfMitigated}, 
			#{damageDealtToObjectives},
			#{damageDealtToTurrets}, 
			#{visionScore}, 
			#{timeCCingOthers}, 
			#{totalDamageTaken}, 
			#{magicalDamageTaken}, 
			#{physicalDamageTaken}, 
			#{trueDamageTaken},
			#{goldEarned}, 
			#{turretKills}, 
			#{inhibitorKills}, 
			#{totalMinionsKilled}, 
			#{neutralMinionsKilledEnemyJungle}, 
			#{champLevel}, 
			#{visionWardsBoughtInGame}, 
			#{wardsPlaced}, 
			#{wardsKilled}, 
			#{firstBloodKill}, 
			#{firstTowerKill}
			)  ON DUPLICATE KEY UPDATE primaryCode = VALUES(primaryCode);
	</insert>
	
	<!-- 챔피언별 플레이 데이터의 순위를 통해 나의 가장 잘하는 플레이 1,2,3을 체크하는 쿼리  -->
	<select id = "selectRanking" parameterType = "hashMap" resultType = "matchInfoDTO">
	
	select (select count(*) from matchpartydata where kills > b.kills and matchId = #{matchId} ) as kills,
		   (select count(*) from matchpartydata where deaths > b.deaths and matchId = #{matchId} ) as deaths,
		   (select count(*) from matchpartydata where assists > b.assists and matchId = #{matchId} ) as assists,
		   (select count(*) from matchpartydata where largestKillingSpree > b.largestKillingSpree and matchId = #{matchId} ) as largestKillingSpree,
		   (select count(*) from matchpartydata where largestMultiKill > b.largestMultiKill and matchId = #{matchId} ) as largestMultiKill,
		   (select count(*) from matchpartydata where killingSprees > b.killingSprees and matchId = #{matchId} ) as killingSprees,
		   (select count(*) from matchpartydata where longestTimeSpentLiving > b.longestTimeSpentLiving and matchId = #{matchId} ) as longestTimeSpentLiving,
		   (select count(*) from matchpartydata where doubleKills > b.doubleKills and matchId = #{matchId} ) as doubleKills,
		   (select count(*) from matchpartydata where tripleKills > b.tripleKills and matchId = #{matchId} ) as tripleKills,
		   (select count(*) from matchpartydata where quadraKills > b.quadraKills and matchId = #{matchId} ) as quadraKills,
		   (select count(*) from matchpartydata where pentaKills > b.pentaKills and matchId = #{matchId} ) as pentaKills,
		   (select count(*) from matchpartydata where totalDamageDealt > b.totalDamageDealt and matchId = #{matchId} ) as totalDamageDealt,
		   (select count(*) from matchpartydata where magicDamageDealt > b.magicDamageDealt and matchId = #{matchId} ) as magicDamageDealt,
		   (select count(*) from matchpartydata where physicalDamageDealt > b.physicalDamageDealt and matchId = #{matchId} ) as physicalDamageDealt,
		   (select count(*) from matchpartydata where trueDamageDealt > b.trueDamageDealt and matchId = #{matchId} ) as trueDamageDealt,
		   (select count(*) from matchpartydata where largestCriticalStrike > b.largestCriticalStrike and matchId = #{matchId} ) as largestCriticalStrike,
		   (select count(*) from matchpartydata where totalDamageDealtToChampions > b.totalDamageDealtToChampions and matchId = #{matchId} ) as totalDamageDealtToChampions,
		   (select count(*) from matchpartydata where magicDamageDealtToChampions > b.magicDamageDealtToChampions and matchId = #{matchId} ) as magicDamageDealtToChampions,
		   (select count(*) from matchpartydata where physicalDamageDealtToChampions > b.physicalDamageDealtToChampions and matchId = #{matchId} ) as physicalDamageDealtToChampions,
		   (select count(*) from matchpartydata where trueDamageDealtToChampions > b.trueDamageDealtToChampions and matchId = #{matchId} ) as trueDamageDealtToChampions,
		   (select count(*) from matchpartydata where totalHeal > b.totalHeal and matchId = #{matchId} ) as totalHeal,
		   (select count(*) from matchpartydata where totalUnitsHealed > b.totalUnitsHealed and matchId = #{matchId} ) as totalUnitsHealed,
		   (select count(*) from matchpartydata where damageSelfMitigated > b.damageSelfMitigated and matchId = #{matchId} ) as damageSelfMitigated,
		   (select count(*) from matchpartydata where damageDealtToObjectives > b.damageDealtToObjectives and matchId = #{matchId} ) as damageDealtToObjectives,
		   (select count(*) from matchpartydata where damageDealtToTurrets > b.damageDealtToTurrets and matchId = #{matchId} ) as damageDealtToTurrets,
		   (select count(*) from matchpartydata where visionScore > b.visionScore and matchId = #{matchId} ) as visionScore,
		   (select count(*) from matchpartydata where timeCCingOthers > b.timeCCingOthers and matchId = #{matchId} ) as timeCCingOthers,
		   (select count(*) from matchpartydata where totalDamageTaken > b.totalDamageTaken and matchId = #{matchId} ) as totalDamageTaken,
		   (select count(*) from matchpartydata where magicalDamageTaken > b.magicalDamageTaken and matchId = #{matchId} ) as magicalDamageTaken,
		   (select count(*) from matchpartydata where physicalDamageTaken > b.physicalDamageTaken and matchId = #{matchId} ) as physicalDamageTaken,
		   (select count(*) from matchpartydata where trueDamageTaken > b.trueDamageTaken and matchId = #{matchId} ) as trueDamageTaken,
		   (select count(*) from matchpartydata where goldEarned > b.goldEarned and matchId = #{matchId} ) as goldEarned,
		   (select count(*) from matchpartydata where turretKills > b.turretKills and matchId = #{matchId} ) as turretKills,
		   (select count(*) from matchpartydata where inhibitorKills > b.inhibitorKills and matchId = #{matchId} ) as inhibitorKills,
		   (select count(*) from matchpartydata where totalMinionsKilled > b.totalMinionsKilled and matchId = #{matchId} ) as totalMinionsKilled,
		   (select count(*) from matchpartydata where neutralMinionsKilledEnemyJungle > b.neutralMinionsKilledEnemyJungle and matchId = #{matchId} ) as neutralMinionsKilledEnemyJungle,
		   (select count(*) from matchpartydata where champLevel > b.champLevel and matchId = #{matchId} ) as champLevel,
		   (select count(*) from matchpartydata where visionWardsBoughtInGame > b.visionWardsBoughtInGame and matchId = #{matchId} ) as visionWardsBoughtInGame,
		   (select count(*) from matchpartydata where wardsPlaced > b.wardsPlaced and matchId = #{matchId} ) as wardsPlaced,
		   (select count(*) from matchpartydata where wardsKilled > b.wardsKilled and matchId = #{matchId} ) as wardsKilled,
		   (select 5-5*firstBloodKill) as firstBloodKill,
		   (select 5-5*firstTowerKill) as firstTowerKill
	
	from matchpartydata as b 
	where championId = #{championId} and matchId = #{matchId} and myPlayData=1
	
	</select>
	
	
	
	<!-- LoLCard의 데이터를 입력받는 쿼리 -->
	<insert id="insertMatchList" parameterType="matchDTO">
	INSERT	INTO LoLCardMatch
			( summonerName, gameId, champion, lane, 
			item0, item1, item2,
			item4, item5, item6, 
			runeMain, runeSub, 
			rune_0, rune_1, rune_2, 
			rune_3, rune_4, rune_5
			)
			
	VALUES	( #{summonerName}, #{gameId}, #{champion}, #{lane}, 
			  #{item0}, #{item1}, #{item2}, 
			  #{item4}, #{item5}, #{item6}, 
			  #{runeMain}, #{runeSub}, 
			  #{rune_0}, #{rune_1}, #{rune_2}, 
			  #{rune_3}, #{rune_4}, #{rune_5} )  
			  ON DUPLICATE KEY UPDATE gameId = VALUES(gameId)
	</insert>
	
	<!--  DAO에 요청하여 데이터의 평균 데이터를 추출, matchDTO형식으로 받음 		-->
	<!--  	챔피언 1,2,3 - 룬 - 아이템 - 포지션. 이렇게 정보를 뽑음  			-->
	<!--  	챔피언 1,2,3 : 가장 많이 플레이한 챔피언			 			-->
	<!--  	룬 : 매판 5개의 룬 중 가장 많이 사용한 룬							-->
	<!--  	아이템 : 매판 아이템 중 가장 많이 사용한 아이템 						-->
	<!--  	포지션 : 가장 많이 플레이한 라인 								-->
	<select id="selectMatchData" parameterType = "String" resultType = "staticPlayerDataDTO">
	
	select 
		
		-- MostChampion_1
	
	(select champion from
	(select @rownum := @rownum +1 as rownum, t.* 
	from (select champion, count(*) from LoLCardMatch group by champion order by count(*) desc limit 3) t, 
	(select @rownum := 0 ) tmp ) a
	where rownum = 1) as MostChampion_1,
	
		-- MostChampion_2
		
	(select champion from
	(select @rownum_2 := @rownum_2 +1 as rownum, tt.* 
	from (select champion, count(*) from LoLCardMatch group by champion order by count(*) desc limit 3) tt, 
	(select @rownum_2 := 0 ) tmp ) aa
	where rownum = 2) as MostChampion_2,
	
		-- MostChampion_3
		
	(select champion from
	(select @rownum_3 := @rownum_3 +1 as rownum, ttt.* 
	from (select champion, count(*) from LoLCardMatch group by champion order by count(*) desc limit 3) ttt, 
	(select @rownum_3 := 0 ) tmp ) aaa
	where rownum = 3) as MostChampion_3,
	
		-- MostRune
		
	(select Rune from
	(select Rune, count(*) as count
	from
	(select Rune from (
	select rune_0 as Rune from lolcardmatch
	union all
	select rune_1 from lolcardmatch
	union all
	select rune_2 from lolcardmatch
	union all
	select rune_3 from lolcardmatch
	union all
	select rune_4 from lolcardmatch
	union all
	select rune_5 from lolcardmatch ) as a) as b group by Rune order by count desc limit 1) as mi) as MostRune,
		
		-- MostItem
		
	(select item from
	(select 
	item, count(if(item != 0, item, null)) as count
	from
	(select item from (
	select item0 as item from lolcardmatch
	union all
	select item1 as item from lolcardmatch
	union all
	select item2 from lolcardmatch
	union all
	select item4 from lolcardmatch
	union all
	select item5 from lolcardmatch
	union all
	select item6 from lolcardmatch ) as a) as b group by item order by count desc limit 1) as mi) as MostItem,
		
		-- MostPosition
		
	(select lane 
	from
	(select lane, count(*) from lolcardmatch group by lane order by count(*) desc limit 1) as ln ) as MostPosition
	
	<!-- 검색 조건 : 이름  -->
	from LoLCardMatch where summonerName = #{summonerName}
	limit 1;
	
	</select>
	
</mapper>
  
  
  
  
  
  
  
  
  
  
  
  
  
  